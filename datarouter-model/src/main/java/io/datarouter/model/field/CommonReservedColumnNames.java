/*
 * Copyright Â© 2009 HotPads (admin@hotpads.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.datarouter.model.field;

import java.util.List;

import io.datarouter.scanner.Scanner;

public class CommonReservedColumnNames{

	public static final List<String> MYSQL_RESERVED_COLUMN_NAMES = List.of(
			"accessible",
			"add",
			"all",
			"alter",
			"analyze",
			"and",
			"array",
			"as",
			"asc",
			"asensitive",
			"before",
			"between",
			"bigint",
			"binary",
			"blob",
			"both",
			"by",
			"call",
			"cascade",
			"case",
			"change",
			"char",
			"character",
			"check",
			"collate",
			"column",
			"condition",
			"constraint",
			"continue",
			"convert",
			"create",
			"cross",
			"cube",
			"cume_dist",
			"current_date",
			"current_time",
			"current_timestamp",
			"current_user",
			"cursor",
			"database",
			"databases",
			"day_hour",
			"day_microsecond",
			"day_minute",
			"day_second",
			"dec",
			"decimal",
			"declare",
			"default",
			"delayed",
			"delete",
			"dense_rank",
			"desc",
			"describe",
			"deterministic",
			"distinct",
			"distinctrow",
			"div",
			"double",
			"drop",
			"dual",
			"each",
			"else",
			"elseif",
			"empty",
			"enclosed",
			"escaped",
			"except",
			"exists",
			"exit",
			"explain",
			"false",
			"fetch",
			"first_value",
			"float",
			"float4",
			"float8",
			"for",
			"force",
			"foreign",
			"from",
			"fulltext",
			"function",
			"generated",
			"get",
			"grant",
			"group",
			"grouping",
			"groups",
			"having",
			"high_priority",
			"hour_microsecond",
			"hour_minute",
			"hour_second",
			"if",
			"ignore",
			"in",
			"index",
			"infile",
			"inner",
			"inout",
			"insensitive",
			"insert",
			"int",
			"int1",
			"int2",
			"int3",
			"int4",
			"int8",
			"integer",
			"intersect",
			"interval",
			"into",
			"io_after_gtids",
			"io_before_gtids",
			"is",
			"iterate",
			"join",
			"json_table",
			"key",
			"keys",
			"kill",
			"lag",
			"last_value",
			"lateral",
			"lead",
			"leading",
			"leave",
			"left",
			"like",
			"limit",
			"linear",
			"lines",
			"load",
			"localtime",
			"localtimestamp",
			"lock",
			"long",
			"longblob",
			"longtext",
			"loop",
			"low_priority",
			"master_bind",
			"master_ssl_verify_server_cert",
			"match",
			"maxvalue",
			"mediumblob",
			"mediumint",
			"mediumtext",
			"member",
			"middleint",
			"minute_microsecond",
			"minute_second",
			"mod",
			"modifies",
			"natural",
			"no_write_to_binlog",
			"not",
			"nth_value",
			"ntile",
			"null",
			"numeric",
			"of",
			"on",
			"optimize",
			"optimizer_costs",
			"option",
			"optionally",
			"or",
			"order",
			"out",
			"outer",
			"outfile",
			"over",
			"partition",
			"percent_rank",
			"precision",
			"primary",
			"procedure",
			"purge",
			"range",
			"rank",
			"read",
			"read_write",
			"reads",
			"real",
			"recursive",
			"recursive",
			"references",
			"regexp",
			"release",
			"rename",
			"repeat",
			"replace",
			"require",
			"resignal",
			"restrict",
			"return",
			"revoke",
			"right",
			"rlike",
			"row",
			"row_number",
			"rows",
			"schema",
			"schemas",
			"second_microsecond",
			"select",
			"sensitive",
			"separator",
			"set",
			"show",
			"signal",
			"smallint",
			"spatial",
			"specific",
			"sql",
			"sql_big_result",
			"sql_calc_found_rows",
			"sql_small_result",
			"sqlexception",
			"sqlstate",
			"sqlwarning",
			"ssl",
			"starting",
			"stored",
			"straight_join",
			"system",
			"table",
			"terminated",
			"then",
			"then",
			"tinyblob",
			"tinyint",
			"tinytext",
			"to",
			"trailing",
			"trigger",
			"true",
			"undo",
			"union",
			"unique",
			"unlock",
			"unsigned",
			"update",
			"usage",
			"use",
			"using",
			"utc_date",
			"utc_time",
			"utc_timestamp",
			"values",
			"varbinary",
			"varchar",
			"varcharacter",
			"varying",
			"virtual",
			"when",
			"where",
			"while",
			"window",
			"with",
			"write",
			"xor",
			"year_month",
			"zerofill");

	public static final List<String> SPANNER_RESERVED_COLUMN_NAMES = List.of(
			"all",
			"and",
			"any",
			"array",
			"as",
			"asc",
			"assert_rows_modified",
			"at",
			"between",
			"by",
			"case",
			"cast",
			"collate",
			"contains",
			"create",
			"cross",
			"cube",
			"current",
			"default",
			"define",
			"desc",
			"distinct",
			"else",
			"end",
			"enum",
			"escape",
			"except",
			"exclude",
			"exists",
			"extract",
			"false",
			"fetch",
			"following",
			"for",
			"from",
			"full",
			"group",
			"grouping",
			"groups",
			"hash",
			"having",
			"if",
			"ignore",
			"in",
			"inner",
			"intersect",
			"interval",
			"into",
			"is",
			"join",
			"lateral",
			"left",
			"like",
			"limit",
			"lookup",
			"merge",
			"natural",
			"new",
			"no",
			"not",
			"null",
			"nulls",
			"of",
			"on",
			"or",
			"order",
			"outer",
			"over",
			"partition",
			"preceding",
			"proto",
			"range",
			"recursive",
			"respect",
			"right",
			"rollup",
			"rows",
			"select",
			"set",
			"some",
			"struct",
			"tablesample",
			"then",
			"to",
			"treat",
			"true",
			"unbounded",
			"union",
			"unnest",
			"using",
			"when",
			"where",
			"window",
			"with",
			"within");

	public static final List<String> ALL_RESERVED_COLUMN_NAMES = Scanner.concat(
			MYSQL_RESERVED_COLUMN_NAMES, SPANNER_RESERVED_COLUMN_NAMES)
			.distinct()
			.list();

}
