package com.hotpads.datarouter.test.node.basic.autogenkey;

import java.util.List;

import javax.inject.Inject;
import javax.inject.Singleton;

import com.hotpads.datarouter.client.ClientId;
import com.hotpads.datarouter.node.Node;
import com.hotpads.datarouter.node.factory.NodeFactory;
import com.hotpads.datarouter.node.op.combo.SortedMapStorage;
import com.hotpads.datarouter.routing.BaseDatarouter;
import com.hotpads.datarouter.routing.DatarouterContext;
import com.hotpads.datarouter.test.DRTestConstants;
import com.hotpads.datarouter.test.node.basic.autogenkey.AutoGeneratedKeyBean.AutoGeneratedKeyBeanFielder;
import com.hotpads.util.core.ListTool;

@Singleton
public class AutoGeneratedKeyTestRouter extends BaseDatarouter{
	
	@Inject
	public AutoGeneratedKeyTestRouter(DatarouterContext drContext, NodeFactory nodeFactory, String clientName){
		super(drContext, DRTestConstants.CONFIG_PATH, AutoGeneratedKeyTestRouter.class.getSimpleName());
		
			autoGeneratedKeyBeanNode = register(nodeFactory.create(clientName, AutoGeneratedKeyBean.class, AutoGeneratedKeyBeanFielder.class, this, false));
		
		registerWithContext();//do after field inits
	}

	/********************************** config **********************************/

	public static final List<ClientId> CLIENT_IDS = ListTool.create(
			new ClientId(DRTestConstants.CLIENT_drTestJdbc0, true),
			new ClientId(DRTestConstants.CLIENT_drTestHibernate0, true),
			new ClientId(DRTestConstants.CLIENT_drTestHBase, true),
			new ClientId(DRTestConstants.CLIENT_drTestMemcached, true));
	
	@Override
	public List<ClientId> getClientIds(){
		return CLIENT_IDS;
	}


	
	/********************************** nodes **********************************/
	
	protected Node<AutoGeneratedKeyBeanKey, AutoGeneratedKeyBean> autoGeneratedKeyBeanNode;

	
	/*************************** get/set ***********************************/
	
	public SortedMapStorage<AutoGeneratedKeyBeanKey,AutoGeneratedKeyBean> autoGeneratedKeyBean(){
		return cast(autoGeneratedKeyBeanNode);
	}

}





